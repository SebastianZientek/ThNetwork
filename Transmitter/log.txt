In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/bits/move.h:57,
                 from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/bits/stl_pair.h:59,
                 from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:70,
                 from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::__is_trivially_copy_constructible_impl<std::tuple<MsgType, MacAddr>, true>':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1244:12:   required from 'struct std::is_trivially_copy_constructible<std::tuple<MsgType, MacAddr> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3131:43:   required from 'constexpr const bool std::is_trivially_copy_constructible_v<std::tuple<MsgType, MacAddr> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr> >'
src/Messages.hpp:35:25:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1239:4: error: invalid use of incomplete type 'class std::tuple<MsgType, MacAddr>'
 1239 |    __is_trivially_constructible(_Tp, const _Tp&)>>
      |    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:2631:11: note: declaration of 'class std::tuple<MsgType, MacAddr>'
 2631 |     class tuple;
      |           ^~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::is_trivially_copy_constructible<std::tuple<MsgType, MacAddr> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3131:43:   required from 'constexpr const bool std::is_trivially_copy_constructible_v<std::tuple<MsgType, MacAddr> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr> >'
src/Messages.hpp:35:25:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1247:52: error: static assertion failed: template argument must be a complete class or an unbounded array
 1247 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'constexpr const bool std::is_trivially_copy_constructible_v<std::tuple<MsgType, MacAddr> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr> >'
src/Messages.hpp:35:25:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3131:43: error: 'value' is not a member of 'std::is_trivially_copy_constructible<std::tuple<MsgType, MacAddr> >'
 3131 |     is_trivially_copy_constructible<_Tp>::value;
      |                                           ^~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::__is_trivially_move_constructible_impl<std::tuple<MsgType, MacAddr>, true>':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1267:12:   required from 'struct std::is_trivially_move_constructible<std::tuple<MsgType, MacAddr> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3134:43:   required from 'constexpr const bool std::is_trivially_move_constructible_v<std::tuple<MsgType, MacAddr> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr> >'
src/Messages.hpp:35:25:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1262:4: error: invalid use of incomplete type 'class std::tuple<MsgType, MacAddr>'
 1262 |    __is_trivially_constructible(_Tp, _Tp&&)>>
      |    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:2631:11: note: declaration of 'class std::tuple<MsgType, MacAddr>'
 2631 |     class tuple;
      |           ^~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::is_trivially_move_constructible<std::tuple<MsgType, MacAddr> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3134:43:   required from 'constexpr const bool std::is_trivially_move_constructible_v<std::tuple<MsgType, MacAddr> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr> >'
src/Messages.hpp:35:25:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1270:52: error: static assertion failed: template argument must be a complete class or an unbounded array
 1270 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'constexpr const bool std::is_trivially_move_constructible_v<std::tuple<MsgType, MacAddr> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr> >'
src/Messages.hpp:35:25:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3134:43: error: 'value' is not a member of 'std::is_trivially_move_constructible<std::tuple<MsgType, MacAddr> >'
 3134 |     is_trivially_move_constructible<_Tp>::value;
      |                                           ^~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::is_copy_constructible<std::tuple<MsgType, MacAddr> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3111:33:   required from 'constexpr const bool std::is_copy_constructible_v<std::tuple<MsgType, MacAddr> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:662:2:   required from 'class std::optional<std::tuple<MsgType, MacAddr> >'
src/Messages.hpp:35:25:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:939:52: error: static assertion failed: template argument must be a complete class or an unbounded array
  939 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::is_move_constructible<std::tuple<MsgType, MacAddr> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3114:33:   required from 'constexpr const bool std::is_move_constructible_v<std::tuple<MsgType, MacAddr> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:666:2:   required from 'class std::optional<std::tuple<MsgType, MacAddr> >'
src/Messages.hpp:35:25:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:960:52: error: static assertion failed: template argument must be a complete class or an unbounded array
  960 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
In file included from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
src/Messages.hpp: In member function 'void PairReqMsg::deserialize(const uint8_t*, size_t)':
src/Messages.hpp:39:18: error: 'tie' is not a member of 'std'
   39 |             std::tie(msgType, transmitterMacAddr) = valuesOpt.value();
      |                  ^~~
src/Messages.hpp:7:1: note: 'std::tie' is defined in header '<tuple>'; did you forget to '#include <tuple>'?
    6 | #include "serializer.hpp"
  +++ |+#include <tuple>
    7 | #include "MacAddr.hpp"
In file included from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional: In instantiation of 'constexpr std::optional<_Tp>::operator bool() const [with _Tp = std::tuple<MsgType, MacAddr>]':
src/Messages.hpp:37:22:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:914:22: error: 'const class std::optional<std::tuple<MsgType, MacAddr> >' has no member named '_M_is_engaged'
  914 |       { return this->_M_is_engaged(); }
      |                ~~~~~~^~~~~~~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/bits/move.h:57,
                 from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/bits/stl_pair.h:59,
                 from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:70,
                 from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::__is_trivially_copy_constructible_impl<std::tuple<MsgType, MacAddr, unsigned char, unsigned char>, true>':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1244:12:   required from 'struct std::is_trivially_copy_constructible<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3131:43:   required from 'constexpr const bool std::is_trivially_copy_constructible_v<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
src/Messages.hpp:66:79:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1239:4: error: invalid use of incomplete type 'class std::tuple<MsgType, MacAddr, unsigned char, unsigned char>'
 1239 |    __is_trivially_constructible(_Tp, const _Tp&)>>
      |    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:2631:11: note: declaration of 'class std::tuple<MsgType, MacAddr, unsigned char, unsigned char>'
 2631 |     class tuple;
      |           ^~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/bits/move.h:57,
                 from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/bits/stl_pair.h:59,
                 from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:70,
                 from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::__is_trivially_copy_constructible_impl<std::tuple<MsgType, MacAddr>, true>':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1244:12:   required from 'struct std::is_trivially_copy_constructible<std::tuple<MsgType, MacAddr> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3131:43:   required from 'constexpr const bool std::is_trivially_copy_constructible_v<std::tuple<MsgType, MacAddr> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr> >'
src/Messages.hpp:35:25:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1239:4: error: invalid use of incomplete type 'class std::tuple<MsgType, MacAddr>'
 1239 |    __is_trivially_constructible(_Tp, const _Tp&)>>
      |    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:2631:11: note: declaration of 'class std::tuple<MsgType, MacAddr>'
 2631 |     class tuple;
      |           ^~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::is_trivially_copy_constructible<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3131:43:   required from 'constexpr const bool std::is_trivially_copy_constructible_v<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
src/Messages.hpp:66:79:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1247:52: error: static assertion failed: template argument must be a complete class or an unbounded array
 1247 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'constexpr const bool std::is_trivially_copy_constructible_v<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
src/Messages.hpp:66:79:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3131:43: error: 'value' is not a member of 'std::is_trivially_copy_constructible<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
 3131 |     is_trivially_copy_constructible<_Tp>::value;
      |                                           ^~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::__is_trivially_move_constructible_impl<std::tuple<MsgType, MacAddr, unsigned char, unsigned char>, true>':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1267:12:   required from 'struct std::is_trivially_move_constructible<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3134:43:   required from 'constexpr const bool std::is_trivially_move_constructible_v<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
src/Messages.hpp:66:79:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1262:4: error: invalid use of incomplete type 'class std::tuple<MsgType, MacAddr, unsigned char, unsigned char>'
 1262 |    __is_trivially_constructible(_Tp, _Tp&&)>>
      |    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:2631:11: note: declaration of 'class std::tuple<MsgType, MacAddr, unsigned char, unsigned char>'
 2631 |     class tuple;
      |           ^~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::is_trivially_copy_constructible<std::tuple<MsgType, MacAddr> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3131:43:   required from 'constexpr const bool std::is_trivially_copy_constructible_v<std::tuple<MsgType, MacAddr> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr> >'
src/Messages.hpp:35:25:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1247:52: error: static assertion failed: template argument must be a complete class or an unbounded array
 1247 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'constexpr const bool std::is_trivially_copy_constructible_v<std::tuple<MsgType, MacAddr> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr> >'
src/Messages.hpp:35:25:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3131:43: error: 'value' is not a member of 'std::is_trivially_copy_constructible<std::tuple<MsgType, MacAddr> >'
 3131 |     is_trivially_copy_constructible<_Tp>::value;
      |                                           ^~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::is_trivially_move_constructible<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3134:43:   required from 'constexpr const bool std::is_trivially_move_constructible_v<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
src/Messages.hpp:66:79:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1270:52: error: static assertion failed: template argument must be a complete class or an unbounded array
 1270 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::__is_trivially_move_constructible_impl<std::tuple<MsgType, MacAddr>, true>':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1267:12:   required from 'struct std::is_trivially_move_constructible<std::tuple<MsgType, MacAddr> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3134:43:   required from 'constexpr const bool std::is_trivially_move_constructible_v<std::tuple<MsgType, MacAddr> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr> >'
src/Messages.hpp:35:25:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1262:4: error: invalid use of incomplete type 'class std::tuple<MsgType, MacAddr>'
 1262 |    __is_trivially_constructible(_Tp, _Tp&&)>>
      |    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:2631:11: note: declaration of 'class std::tuple<MsgType, MacAddr>'
 2631 |     class tuple;
      |           ^~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'constexpr const bool std::is_trivially_move_constructible_v<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
src/Messages.hpp:66:79:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3134:43: error: 'value' is not a member of 'std::is_trivially_move_constructible<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
 3134 |     is_trivially_move_constructible<_Tp>::value;
      |                                           ^~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::is_trivially_move_constructible<std::tuple<MsgType, MacAddr> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3134:43:   required from 'constexpr const bool std::is_trivially_move_constructible_v<std::tuple<MsgType, MacAddr> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr> >'
src/Messages.hpp:35:25:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1270:52: error: static assertion failed: template argument must be a complete class or an unbounded array
 1270 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'constexpr const bool std::is_trivially_move_constructible_v<std::tuple<MsgType, MacAddr> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr> >'
src/Messages.hpp:35:25:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3134:43: error: 'value' is not a member of 'std::is_trivially_move_constructible<std::tuple<MsgType, MacAddr> >'
 3134 |     is_trivially_move_constructible<_Tp>::value;
      |                                           ^~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::is_copy_constructible<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3111:33:   required from 'constexpr const bool std::is_copy_constructible_v<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:662:2:   required from 'class std::optional<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
src/Messages.hpp:66:79:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:939:52: error: static assertion failed: template argument must be a complete class or an unbounded array
  939 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::is_copy_constructible<std::tuple<MsgType, MacAddr> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3111:33:   required from 'constexpr const bool std::is_copy_constructible_v<std::tuple<MsgType, MacAddr> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:662:2:   required from 'class std::optional<std::tuple<MsgType, MacAddr> >'
src/Messages.hpp:35:25:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:939:52: error: static assertion failed: template argument must be a complete class or an unbounded array
  939 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::is_move_constructible<std::tuple<MsgType, MacAddr> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3114:33:   required from 'constexpr const bool std::is_move_constructible_v<std::tuple<MsgType, MacAddr> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:666:2:   required from 'class std::optional<std::tuple<MsgType, MacAddr> >'
src/Messages.hpp:35:25:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:960:52: error: static assertion failed: template argument must be a complete class or an unbounded array
  960 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::is_move_constructible<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3114:33:   required from 'constexpr const bool std::is_move_constructible_v<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:666:2:   required from 'class std::optional<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
src/Messages.hpp:66:79:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:960:52: error: static assertion failed: template argument must be a complete class or an unbounded array
  960 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
In file included from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
src/Messages.hpp: In member function 'void PairReqMsg::deserialize(const uint8_t*, size_t)':
src/Messages.hpp:39:18: error: 'tie' is not a member of 'std'
   39 |             std::tie(msgType, transmitterMacAddr) = valuesOpt.value();
      |                  ^~~
src/Messages.hpp:7:1: note: 'std::tie' is defined in header '<tuple>'; did you forget to '#include <tuple>'?
    6 | #include "serializer.hpp"
  +++ |+#include <tuple>
    7 | #include "MacAddr.hpp"
In file included from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional: In instantiation of 'constexpr std::optional<_Tp>::operator bool() const [with _Tp = std::tuple<MsgType, MacAddr>]':
src/Messages.hpp:37:22:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:914:22: error: 'const class std::optional<std::tuple<MsgType, MacAddr> >' has no member named '_M_is_engaged'
  914 |       { return this->_M_is_engaged(); }
      |                ~~~~~~^~~~~~~~~~~~~
In file included from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
src/Messages.hpp: In member function 'void PairRespMsg::deserialize(const uint8_t*, size_t)':
src/Messages.hpp:70:18: error: 'tie' is not a member of 'std'
   70 |             std::tie(msgType, hostMacAddr, channel, updatePeriodMins) = valuesOpt.value();
      |                  ^~~
src/Messages.hpp:70:18: note: 'std::tie' is defined in header '<tuple>'; did you forget to '#include <tuple>'?
In file included from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional: In instantiation of 'constexpr std::optional<_Tp>::operator bool() const [with _Tp = std::tuple<MsgType, MacAddr, unsigned char, unsigned char>]':
src/Messages.hpp:68:22:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:914:22: error: 'const class std::optional<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >' has no member named '_M_is_engaged'
  914 |       { return this->_M_is_engaged(); }
      |                ~~~~~~^~~~~~~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/bits/move.h:57,
                 from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/bits/stl_pair.h:59,
                 from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:70,
                 from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::__is_trivially_copy_constructible_impl<std::tuple<MsgType, MacAddr, unsigned char, unsigned char>, true>':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1244:12:   required from 'struct std::is_trivially_copy_constructible<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3131:43:   required from 'constexpr const bool std::is_trivially_copy_constructible_v<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
src/Messages.hpp:66:79:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1239:4: error: invalid use of incomplete type 'class std::tuple<MsgType, MacAddr, unsigned char, unsigned char>'
 1239 |    __is_trivially_constructible(_Tp, const _Tp&)>>
      |    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:2631:11: note: declaration of 'class std::tuple<MsgType, MacAddr, unsigned char, unsigned char>'
 2631 |     class tuple;
      |           ^~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::is_trivially_copy_constructible<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3131:43:   required from 'constexpr const bool std::is_trivially_copy_constructible_v<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
src/Messages.hpp:66:79:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1247:52: error: static assertion failed: template argument must be a complete class or an unbounded array
 1247 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/bits/move.h:57,
                 from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/bits/stl_pair.h:59,
                 from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:70,
                 from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::__is_trivially_copy_constructible_impl<std::tuple<MsgType, MacAddr, float, float>, true>':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1244:12:   required from 'struct std::is_trivially_copy_constructible<std::tuple<MsgType, MacAddr, float, float> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3131:43:   required from 'constexpr const bool std::is_trivially_copy_constructible_v<std::tuple<MsgType, MacAddr, float, float> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr, float, float> >'
src/Messages.hpp:97:94:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1239:4: error: invalid use of incomplete type 'class std::tuple<MsgType, MacAddr, float, float>'
 1239 |    __is_trivially_constructible(_Tp, const _Tp&)>>
      |    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'constexpr const bool std::is_trivially_copy_constructible_v<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
src/Messages.hpp:66:79:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3131:43: error: 'value' is not a member of 'std::is_trivially_copy_constructible<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
 3131 |     is_trivially_copy_constructible<_Tp>::value;
      |                                           ^~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:2631:11: note: declaration of 'class std::tuple<MsgType, MacAddr, float, float>'
 2631 |     class tuple;
      |           ^~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::__is_trivially_move_constructible_impl<std::tuple<MsgType, MacAddr, unsigned char, unsigned char>, true>':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1267:12:   required from 'struct std::is_trivially_move_constructible<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3134:43:   required from 'constexpr const bool std::is_trivially_move_constructible_v<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
src/Messages.hpp:66:79:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1262:4: error: invalid use of incomplete type 'class std::tuple<MsgType, MacAddr, unsigned char, unsigned char>'
 1262 |    __is_trivially_constructible(_Tp, _Tp&&)>>
      |    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:2631:11: note: declaration of 'class std::tuple<MsgType, MacAddr, unsigned char, unsigned char>'
 2631 |     class tuple;
      |           ^~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::is_trivially_move_constructible<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3134:43:   required from 'constexpr const bool std::is_trivially_move_constructible_v<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
src/Messages.hpp:66:79:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1270:52: error: static assertion failed: template argument must be a complete class or an unbounded array
 1270 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'constexpr const bool std::is_trivially_move_constructible_v<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
src/Messages.hpp:66:79:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3134:43: error: 'value' is not a member of 'std::is_trivially_move_constructible<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
 3134 |     is_trivially_move_constructible<_Tp>::value;
      |                                           ^~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::is_copy_constructible<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3111:33:   required from 'constexpr const bool std::is_copy_constructible_v<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:662:2:   required from 'class std::optional<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
src/Messages.hpp:66:79:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:939:52: error: static assertion failed: template argument must be a complete class or an unbounded array
  939 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::is_move_constructible<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3114:33:   required from 'constexpr const bool std::is_move_constructible_v<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:666:2:   required from 'class std::optional<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >'
src/Messages.hpp:66:79:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:960:52: error: static assertion failed: template argument must be a complete class or an unbounded array
  960 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::is_trivially_copy_constructible<std::tuple<MsgType, MacAddr, float, float> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3131:43:   required from 'constexpr const bool std::is_trivially_copy_constructible_v<std::tuple<MsgType, MacAddr, float, float> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr, float, float> >'
src/Messages.hpp:97:94:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1247:52: error: static assertion failed: template argument must be a complete class or an unbounded array
 1247 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'constexpr const bool std::is_trivially_copy_constructible_v<std::tuple<MsgType, MacAddr, float, float> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr, float, float> >'
src/Messages.hpp:97:94:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3131:43: error: 'value' is not a member of 'std::is_trivially_copy_constructible<std::tuple<MsgType, MacAddr, float, float> >'
 3131 |     is_trivially_copy_constructible<_Tp>::value;
      |                                           ^~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::__is_trivially_move_constructible_impl<std::tuple<MsgType, MacAddr, float, float>, true>':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1267:12:   required from 'struct std::is_trivially_move_constructible<std::tuple<MsgType, MacAddr, float, float> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3134:43:   required from 'constexpr const bool std::is_trivially_move_constructible_v<std::tuple<MsgType, MacAddr, float, float> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr, float, float> >'
src/Messages.hpp:97:94:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1262:4: error: invalid use of incomplete type 'class std::tuple<MsgType, MacAddr, float, float>'
 1262 |    __is_trivially_constructible(_Tp, _Tp&&)>>
      |    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:2631:11: note: declaration of 'class std::tuple<MsgType, MacAddr, float, float>'
 2631 |     class tuple;
      |           ^~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::is_trivially_move_constructible<std::tuple<MsgType, MacAddr, float, float> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3134:43:   required from 'constexpr const bool std::is_trivially_move_constructible_v<std::tuple<MsgType, MacAddr, float, float> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr, float, float> >'
src/Messages.hpp:97:94:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1270:52: error: static assertion failed: template argument must be a complete class or an unbounded array
 1270 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'constexpr const bool std::is_trivially_move_constructible_v<std::tuple<MsgType, MacAddr, float, float> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr, float, float> >'
src/Messages.hpp:97:94:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3134:43: error: 'value' is not a member of 'std::is_trivially_move_constructible<std::tuple<MsgType, MacAddr, float, float> >'
 3134 |     is_trivially_move_constructible<_Tp>::value;
      |                                           ^~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::is_copy_constructible<std::tuple<MsgType, MacAddr, float, float> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3111:33:   required from 'constexpr const bool std::is_copy_constructible_v<std::tuple<MsgType, MacAddr, float, float> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:662:2:   required from 'class std::optional<std::tuple<MsgType, MacAddr, float, float> >'
src/Messages.hpp:97:94:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:939:52: error: static assertion failed: template argument must be a complete class or an unbounded array
  939 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::is_move_constructible<std::tuple<MsgType, MacAddr, float, float> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3114:33:   required from 'constexpr const bool std::is_move_constructible_v<std::tuple<MsgType, MacAddr, float, float> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:666:2:   required from 'class std::optional<std::tuple<MsgType, MacAddr, float, float> >'
src/Messages.hpp:97:94:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:960:52: error: static assertion failed: template argument must be a complete class or an unbounded array
  960 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
In file included from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
src/Messages.hpp: In member function 'void PairRespMsg::deserialize(const uint8_t*, size_t)':
src/Messages.hpp:70:18: error: 'tie' is not a member of 'std'
   70 |             std::tie(msgType, hostMacAddr, channel, updatePeriodMins) = valuesOpt.value();
      |                  ^~~
src/Messages.hpp:70:18: note: 'std::tie' is defined in header '<tuple>'; did you forget to '#include <tuple>'?
In file included from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional: In instantiation of 'constexpr std::optional<_Tp>::operator bool() const [with _Tp = std::tuple<MsgType, MacAddr, unsigned char, unsigned char>]':
src/Messages.hpp:68:22:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:914:22: error: 'const class std::optional<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >' has no member named '_M_is_engaged'
  914 |       { return this->_M_is_engaged(); }
      |                ~~~~~~^~~~~~~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/bits/move.h:57,
                 from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/bits/stl_pair.h:59,
                 from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:70,
                 from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::__is_trivially_copy_constructible_impl<std::tuple<MsgType, MacAddr, float, float>, true>':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1244:12:   required from 'struct std::is_trivially_copy_constructible<std::tuple<MsgType, MacAddr, float, float> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3131:43:   required from 'constexpr const bool std::is_trivially_copy_constructible_v<std::tuple<MsgType, MacAddr, float, float> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr, float, float> >'
src/Messages.hpp:97:94:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1239:4: error: invalid use of incomplete type 'class std::tuple<MsgType, MacAddr, float, float>'
 1239 |    __is_trivially_constructible(_Tp, const _Tp&)>>
      |    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:2631:11: note: declaration of 'class std::tuple<MsgType, MacAddr, float, float>'
 2631 |     class tuple;
      |           ^~~~~
In file included from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
src/Messages.hpp: In member function 'void SensorDataMsg::deserialize(const uint8_t*, size_t)':
src/Messages.hpp:101:18: error: 'tie' is not a member of 'std'
  101 |             std::tie(msgType, transmitterMacAddr, temperature, humidity) = valuesOpt.value();
      |                  ^~~
src/Messages.hpp:101:18: note: 'std::tie' is defined in header '<tuple>'; did you forget to '#include <tuple>'?
In file included from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional: In instantiation of 'constexpr std::optional<_Tp>::operator bool() const [with _Tp = std::tuple<MsgType, MacAddr, float, float>]':
src/Messages.hpp:99:22:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:914:22: error: 'const class std::optional<std::tuple<MsgType, MacAddr, float, float> >' has no member named '_M_is_engaged'
  914 |       { return this->_M_is_engaged(); }
      |                ~~~~~~^~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::is_trivially_copy_constructible<std::tuple<MsgType, MacAddr, float, float> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3131:43:   required from 'constexpr const bool std::is_trivially_copy_constructible_v<std::tuple<MsgType, MacAddr, float, float> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr, float, float> >'
src/Messages.hpp:97:94:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1247:52: error: static assertion failed: template argument must be a complete class or an unbounded array
 1247 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'constexpr const bool std::is_trivially_copy_constructible_v<std::tuple<MsgType, MacAddr, float, float> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr, float, float> >'
src/Messages.hpp:97:94:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3131:43: error: 'value' is not a member of 'std::is_trivially_copy_constructible<std::tuple<MsgType, MacAddr, float, float> >'
 3131 |     is_trivially_copy_constructible<_Tp>::value;
      |                                           ^~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::__is_trivially_move_constructible_impl<std::tuple<MsgType, MacAddr, float, float>, true>':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1267:12:   required from 'struct std::is_trivially_move_constructible<std::tuple<MsgType, MacAddr, float, float> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3134:43:   required from 'constexpr const bool std::is_trivially_move_constructible_v<std::tuple<MsgType, MacAddr, float, float> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr, float, float> >'
src/Messages.hpp:97:94:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1262:4: error: invalid use of incomplete type 'class std::tuple<MsgType, MacAddr, float, float>'
 1262 |    __is_trivially_constructible(_Tp, _Tp&&)>>
      |    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:2631:11: note: declaration of 'class std::tuple<MsgType, MacAddr, float, float>'
 2631 |     class tuple;
      |           ^~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::is_trivially_move_constructible<std::tuple<MsgType, MacAddr, float, float> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3134:43:   required from 'constexpr const bool std::is_trivially_move_constructible_v<std::tuple<MsgType, MacAddr, float, float> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr, float, float> >'
src/Messages.hpp:97:94:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:1270:52: error: static assertion failed: template argument must be a complete class or an unbounded array
 1270 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'constexpr const bool std::is_trivially_move_constructible_v<std::tuple<MsgType, MacAddr, float, float> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:658:11:   required from 'class std::optional<std::tuple<MsgType, MacAddr, float, float> >'
src/Messages.hpp:97:94:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3134:43: error: 'value' is not a member of 'std::is_trivially_move_constructible<std::tuple<MsgType, MacAddr, float, float> >'
 3134 |     is_trivially_move_constructible<_Tp>::value;
      |                                           ^~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::is_copy_constructible<std::tuple<MsgType, MacAddr, float, float> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3111:33:   required from 'constexpr const bool std::is_copy_constructible_v<std::tuple<MsgType, MacAddr, float, float> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:662:2:   required from 'class std::optional<std::tuple<MsgType, MacAddr, float, float> >'
src/Messages.hpp:97:94:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:939:52: error: static assertion failed: template argument must be a complete class or an unbounded array
  939 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits: In instantiation of 'struct std::is_move_constructible<std::tuple<MsgType, MacAddr, float, float> >':
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:3114:33:   required from 'constexpr const bool std::is_move_constructible_v<std::tuple<MsgType, MacAddr, float, float> >'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:666:2:   required from 'class std::optional<std::tuple<MsgType, MacAddr, float, float> >'
src/Messages.hpp:97:94:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/type_traits:960:52: error: static assertion failed: template argument must be a complete class or an unbounded array
  960 |       static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
In file included from src/App.hpp:3,
                 from src/App.cpp:1:
src/EspNow.hpp: At global scope:
src/EspNow.hpp:31:27: error: 'function' in namespace 'std' does not name a template type
   31 |     using OnSendCb = std::function<void(const MacAddr &mac, uint8_t status)>;
      |                           ^~~~~~~~
src/EspNow.hpp:9:1: note: 'std::function' is defined in header '<functional>'; did you forget to '#include <functional>'?
    8 | #include "config.hpp"
  +++ |+#include <functional>
    9 | #include "serializer.hpp"
src/EspNow.hpp:32:27: error: 'function' in namespace 'std' does not name a template type
   32 |     using OnRecvCb = std::function<void(const MacAddr &mac, const uint8_t *incomingData, uint8_t len)>;
      |                           ^~~~~~~~
src/EspNow.hpp:32:22: note: 'std::function' is defined in header '<functional>'; did you forget to '#include <functional>'?
   32 |     using OnRecvCb = std::function<void(const MacAddr &mac, const uint8_t *incomingData, uint8_t len)>;
      |                      ^~~
In file included from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
src/Messages.hpp: In member function 'void SensorDataMsg::deserialize(const uint8_t*, size_t)':
src/Messages.hpp:101:18: error: 'tie' is not a member of 'std'
  101 |             std::tie(msgType, transmitterMacAddr, temperature, humidity) = valuesOpt.value();
      |                  ^~~
src/Messages.hpp:101:18: note: 'std::tie' is defined in header '<tuple>'; did you forget to '#include <tuple>'?
In file included from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional: In instantiation of 'constexpr std::optional<_Tp>::operator bool() const [with _Tp = std::tuple<MsgType, MacAddr, float, float>]':
src/Messages.hpp:99:22:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:914:22: error: 'const class std::optional<std::tuple<MsgType, MacAddr, float, float> >' has no member named '_M_is_engaged'
  914 |       { return this->_M_is_engaged(); }
      |                ~~~~~~^~~~~~~~~~~~~
In file included from src/EspNow.cpp:1:
src/EspNow.hpp: At global scope:
src/EspNow.hpp:31:27: error: 'function' in namespace 'std' does not name a template type
   31 |     using OnSendCb = std::function<void(const MacAddr &mac, uint8_t status)>;
      |                           ^~~~~~~~
src/EspNow.hpp:9:1: note: 'std::function' is defined in header '<functional>'; did you forget to '#include <functional>'?
    8 | #include "config.hpp"
  +++ |+#include <functional>
    9 | #include "serializer.hpp"
src/EspNow.hpp:32:27: error: 'function' in namespace 'std' does not name a template type
   32 |     using OnRecvCb = std::function<void(const MacAddr &mac, const uint8_t *incomingData, uint8_t len)>;
      |                           ^~~~~~~~
src/EspNow.hpp:32:22: note: 'std::function' is defined in header '<functional>'; did you forget to '#include <functional>'?
   32 |     using OnRecvCb = std::function<void(const MacAddr &mac, const uint8_t *incomingData, uint8_t len)>;
      |                      ^~~
src/EspNow.hpp:34:12: error: 'OnSendCb' does not name a type
   34 |     static OnSendCb m_onSend;  // NOLINT
      |            ^~~~~~~~
src/EspNow.hpp:34:12: error: 'OnSendCb' does not name a type
   34 |     static OnSendCb m_onSend;  // NOLINT
      |            ^~~~~~~~
src/EspNow.hpp:35:12: error: 'OnRecvCb' does not name a type
   35 |     static OnRecvCb m_onRecv;  // NOLINT
      |            ^~~~~~~~
src/EspNow.hpp:35:12: error: 'OnRecvCb' does not name a type
   35 |     static OnRecvCb m_onRecv;  // NOLINT
      |            ^~~~~~~~
src/EspNow.cpp:13:9: error: 'OnSendCb' in 'class EspNow' does not name a type
   13 | EspNow::OnSendCb EspNow::m_onSend;  // NOLINT
      |         ^~~~~~~~
src/EspNow.cpp:14:9: error: 'OnRecvCb' in 'class EspNow' does not name a type
   14 | EspNow::OnRecvCb EspNow::m_onRecv;  // NOLINT
      |         ^~~~~~~~
src/EspNow.cpp: In member function 'void EspNow::setOnDataRecvCb()':
src/EspNow.cpp:81:5: error: 'm_onRecv' was not declared in this scope
   81 |     m_onRecv = [this](const MacAddr &mac, const uint8_t *incomingData, uint8_t len)
      |     ^~~~~~~~
src/EspNow.cpp: In lambda function:
src/EspNow.cpp:87:9: error: 'm_onRecv' is not captured
   87 |         m_onRecv(macAddr, incomingData, len);
      |         ^~~~~~~~
src/EspNow.cpp:83:24: note: the lambda has no capture-default
   83 |     auto onDataRecv = [](uint8_t *rawMac, uint8_t *incomingData, uint8_t len)  // NOLINT
      |                        ^
src/EspNow.cpp:81:5: note: '<typeprefixerror>m_onRecv' declared here
   81 |     m_onRecv = [this](const MacAddr &mac, const uint8_t *incomingData, uint8_t len)
      |     ^~~~~~~~
src/EspNow.cpp: In member function 'void EspNow::setOnDataSendCb()':
src/EspNow.cpp:95:5: error: 'm_onSend' was not declared in this scope
   95 |     m_onSend = [this](const MacAddr &mac, uint8_t status) { this->onDataSend(mac, status); };
      |     ^~~~~~~~
src/EspNow.cpp: In lambda function:
src/EspNow.cpp:101:9: error: 'm_onSend' is not captured
  101 |         m_onSend(macAddr, status);
      |         ^~~~~~~~
src/EspNow.cpp:97:24: note: the lambda has no capture-default
   97 |     auto onDataSend = [](uint8_t *rawMac, uint8_t status)
      |                        ^
src/EspNow.cpp:95:5: note: '<typeprefixerror>m_onSend' declared here
   95 |     m_onSend = [this](const MacAddr &mac, uint8_t status) { this->onDataSend(mac, status); };
      |     ^~~~~~~~
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp: In instantiation of 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr>; unsigned int tplIndex = 0; T = MsgType; Ts = {MacAddr}; uint8_t = unsigned char; size_t = unsigned int]':
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:70:42:   required from 'std::optional<std::tuple<_Tps ...> > serializer::deserialize(const uint8_t*, size_t) [with Ts = {MsgType, MacAddr}; uint8_t = unsigned char; size_t = unsigned int]'
src/Messages.hpp:35:25:   required from here
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: error: no matching function for call to 'get<0>(std::tuple<MsgType, MacAddr>&)'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1, _Tp2>&)'
  223 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)'
  228 |     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&)'
  233 |     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(const std::pair<_Tp1, _Tp2>&&)'
  238 |     get(const std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_T1, _T2>&)'
  247 |     get(pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_T1, _T2>&)'
  252 |     get(const pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_T1, _T2>&&)'
  257 |     get(pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_T1, _T2>&&)'
  262 |     get(const pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_Up, _Tp>&)'
  267 |     get(pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_Up, _Tp>&)'
  272 |     get(const pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_Up, _Tp>&&)'
  277 |     get(pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_Up, _Tp>&&)'
  282 |     get(const pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp& std::get(std::array<_Tp, _Nm>&)'
  338 |     get(array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp&& std::get(std::array<_Tp, _Nm>&&)'
  347 |     get(array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp& std::get(const std::array<_Tp, _Nm>&)'
  355 |     get(const array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp&& std::get(const std::array<_Tp, _Nm>&&)'
  364 |     get(const array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp: In instantiation of 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr>; unsigned int tplIndex = 1; T = MacAddr; Ts = {}; uint8_t = unsigned char; size_t = unsigned int]':
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:57:42:   required from 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr>; unsigned int tplIndex = 0; T = MsgType; Ts = {MacAddr}; uint8_t = unsigned char; size_t = unsigned int]'
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:70:42:   required from 'std::optional<std::tuple<_Tps ...> > serializer::deserialize(const uint8_t*, size_t) [with Ts = {MsgType, MacAddr}; uint8_t = unsigned char; size_t = unsigned int]'
src/Messages.hpp:35:25:   required from here
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: error: no matching function for call to 'get<1>(std::tuple<MsgType, MacAddr>&)'
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1, _Tp2>&)'
  223 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)'
  228 |     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&)'
  233 |     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(const std::pair<_Tp1, _Tp2>&&)'
  238 |     get(const std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_T1, _T2>&)'
  247 |     get(pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_T1, _T2>&)'
  252 |     get(const pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_T1, _T2>&&)'
  257 |     get(pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_T1, _T2>&&)'
  262 |     get(const pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_Up, _Tp>&)'
  267 |     get(pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_Up, _Tp>&)'
  272 |     get(const pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_Up, _Tp>&&)'
  277 |     get(pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_Up, _Tp>&&)'
  282 |     get(const pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp& std::get(std::array<_Tp, _Nm>&)'
  338 |     get(array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp&& std::get(std::array<_Tp, _Nm>&&)'
  347 |     get(array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp& std::get(const std::array<_Tp, _Nm>&)'
  355 |     get(const array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp&& std::get(const std::array<_Tp, _Nm>&&)'
  364 |     get(const array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional: In instantiation of 'constexpr _Tp& std::optional<_Tp>::value() & [with _Tp = std::tuple<MsgType, MacAddr>]':
src/Messages.hpp:39:69:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:930:15: error: 'class std::optional<std::tuple<MsgType, MacAddr> >' has no member named '_M_is_engaged'
  930 |  return this->_M_is_engaged()
      |         ~~~~~~^~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:931:12: error: 'class std::optional<std::tuple<MsgType, MacAddr> >' has no member named '_M_get'
  931 |    ? this->_M_get()
      |      ~~~~~~^~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:932:44: error: 'class std::optional<std::tuple<MsgType, MacAddr> >' has no member named '_M_get'
  932 |    : (__throw_bad_optional_access(), this->_M_get());
      |                                      ~~~~~~^~~~~~
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp: In instantiation of 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, unsigned char, unsigned char>; unsigned int tplIndex = 0; T = MsgType; Ts = {MacAddr, unsigned char, unsigned char}; uint8_t = unsigned char; size_t = unsigned int]':
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:70:42:   required from 'std::optional<std::tuple<_Tps ...> > serializer::deserialize(const uint8_t*, size_t) [with Ts = {MsgType, MacAddr, unsigned char, unsigned char}; uint8_t = unsigned char; size_t = unsigned int]'
src/Messages.hpp:66:79:   required from here
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: error: no matching function for call to 'get<0>(std::tuple<MsgType, MacAddr, unsigned char, unsigned char>&)'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1, _Tp2>&)'
  223 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)'
  228 |     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&)'
  233 |     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(const std::pair<_Tp1, _Tp2>&&)'
  238 |     get(const std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_T1, _T2>&)'
  247 |     get(pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_T1, _T2>&)'
  252 |     get(const pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_T1, _T2>&&)'
  257 |     get(pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_T1, _T2>&&)'
  262 |     get(const pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_Up, _Tp>&)'
  267 |     get(pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_Up, _Tp>&)'
  272 |     get(const pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_Up, _Tp>&&)'
  277 |     get(pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_Up, _Tp>&&)'
  282 |     get(const pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp& std::get(std::array<_Tp, _Nm>&)'
  338 |     get(array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp&& std::get(std::array<_Tp, _Nm>&&)'
  347 |     get(array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp& std::get(const std::array<_Tp, _Nm>&)'
  355 |     get(const array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp&& std::get(const std::array<_Tp, _Nm>&&)'
  364 |     get(const array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp: In instantiation of 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, unsigned char, unsigned char>; unsigned int tplIndex = 1; T = MacAddr; Ts = {unsigned char, unsigned char}; uint8_t = unsigned char; size_t = unsigned int]':
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:57:42:   required from 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, unsigned char, unsigned char>; unsigned int tplIndex = 0; T = MsgType; Ts = {MacAddr, unsigned char, unsigned char}; uint8_t = unsigned char; size_t = unsigned int]'
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:70:42:   required from 'std::optional<std::tuple<_Tps ...> > serializer::deserialize(const uint8_t*, size_t) [with Ts = {MsgType, MacAddr, unsigned char, unsigned char}; uint8_t = unsigned char; size_t = unsigned int]'
src/Messages.hpp:66:79:   required from here
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: error: no matching function for call to 'get<1>(std::tuple<MsgType, MacAddr, unsigned char, unsigned char>&)'
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1, _Tp2>&)'
  223 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)'
  228 |     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&)'
  233 |     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(const std::pair<_Tp1, _Tp2>&&)'
  238 |     get(const std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_T1, _T2>&)'
  247 |     get(pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_T1, _T2>&)'
  252 |     get(const pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_T1, _T2>&&)'
  257 |     get(pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_T1, _T2>&&)'
  262 |     get(const pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_Up, _Tp>&)'
  267 |     get(pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_Up, _Tp>&)'
  272 |     get(const pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_Up, _Tp>&&)'
  277 |     get(pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_Up, _Tp>&&)'
  282 |     get(const pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp& std::get(std::array<_Tp, _Nm>&)'
  338 |     get(array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp&& std::get(std::array<_Tp, _Nm>&&)'
  347 |     get(array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp& std::get(const std::array<_Tp, _Nm>&)'
  355 |     get(const array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp&& std::get(const std::array<_Tp, _Nm>&&)'
  364 |     get(const array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp: In instantiation of 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, unsigned char, unsigned char>; unsigned int tplIndex = 2; T = unsigned char; Ts = {unsigned char}; uint8_t = unsigned char; size_t = unsigned int]':
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:57:42:   recursively required from 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, unsigned char, unsigned char>; unsigned int tplIndex = 1; T = MacAddr; Ts = {unsigned char, unsigned char}; uint8_t = unsigned char; size_t = unsigned int]'
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:57:42:   required from 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, unsigned char, unsigned char>; unsigned int tplIndex = 0; T = MsgType; Ts = {MacAddr, unsigned char, unsigned char}; uint8_t = unsigned char; size_t = unsigned int]'
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:70:42:   required from 'std::optional<std::tuple<_Tps ...> > serializer::deserialize(const uint8_t*, size_t) [with Ts = {MsgType, MacAddr, unsigned char, unsigned char}; uint8_t = unsigned char; size_t = unsigned int]'
src/Messages.hpp:66:79:   required from here
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: error: no matching function for call to 'get<2>(std::tuple<MsgType, MacAddr, unsigned char, unsigned char>&)'
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1, _Tp2>&)'
  223 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)'
  228 |     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&)'
  233 |     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(const std::pair<_Tp1, _Tp2>&&)'
  238 |     get(const std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_T1, _T2>&)'
  247 |     get(pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_T1, _T2>&)'
  252 |     get(const pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_T1, _T2>&&)'
  257 |     get(pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_T1, _T2>&&)'
  262 |     get(const pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_Up, _Tp>&)'
  267 |     get(pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_Up, _Tp>&)'
  272 |     get(const pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_Up, _Tp>&&)'
  277 |     get(pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_Up, _Tp>&&)'
  282 |     get(const pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp& std::get(std::array<_Tp, _Nm>&)'
  338 |     get(array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp&& std::get(std::array<_Tp, _Nm>&&)'
  347 |     get(array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp& std::get(const std::array<_Tp, _Nm>&)'
  355 |     get(const array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp&& std::get(const std::array<_Tp, _Nm>&&)'
  364 |     get(const array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp: In instantiation of 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, unsigned char, unsigned char>; unsigned int tplIndex = 3; T = unsigned char; Ts = {}; uint8_t = unsigned char; size_t = unsigned int]':
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:57:42:   recursively required from 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, unsigned char, unsigned char>; unsigned int tplIndex = 1; T = MacAddr; Ts = {unsigned char, unsigned char}; uint8_t = unsigned char; size_t = unsigned int]'
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:57:42:   required from 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, unsigned char, unsigned char>; unsigned int tplIndex = 0; T = MsgType; Ts = {MacAddr, unsigned char, unsigned char}; uint8_t = unsigned char; size_t = unsigned int]'
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:70:42:   required from 'std::optional<std::tuple<_Tps ...> > serializer::deserialize(const uint8_t*, size_t) [with Ts = {MsgType, MacAddr, unsigned char, unsigned char}; uint8_t = unsigned char; size_t = unsigned int]'
src/Messages.hpp:66:79:   required from here
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: error: no matching function for call to 'get<3>(std::tuple<MsgType, MacAddr, unsigned char, unsigned char>&)'
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1, _Tp2>&)'
  223 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)'
  228 |     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&)'
  233 |     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(const std::pair<_Tp1, _Tp2>&&)'
  238 |     get(const std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_T1, _T2>&)'
  247 |     get(pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_T1, _T2>&)'
  252 |     get(const pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_T1, _T2>&&)'
  257 |     get(pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_T1, _T2>&&)'
  262 |     get(const pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_Up, _Tp>&)'
  267 |     get(pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_Up, _Tp>&)'
  272 |     get(const pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_Up, _Tp>&&)'
  277 |     get(pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_Up, _Tp>&&)'
  282 |     get(const pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp& std::get(std::array<_Tp, _Nm>&)'
  338 |     get(array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp&& std::get(std::array<_Tp, _Nm>&&)'
  347 |     get(array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp& std::get(const std::array<_Tp, _Nm>&)'
  355 |     get(const array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp&& std::get(const std::array<_Tp, _Nm>&&)'
  364 |     get(const array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional: In instantiation of 'constexpr _Tp& std::optional<_Tp>::value() & [with _Tp = std::tuple<MsgType, MacAddr, unsigned char, unsigned char>]':
src/Messages.hpp:70:89:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:930:15: error: 'class std::optional<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >' has no member named '_M_is_engaged'
  930 |  return this->_M_is_engaged()
      |         ~~~~~~^~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:931:12: error: 'class std::optional<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >' has no member named '_M_get'
  931 |    ? this->_M_get()
      |      ~~~~~~^~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:932:44: error: 'class std::optional<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >' has no member named '_M_get'
  932 |    : (__throw_bad_optional_access(), this->_M_get());
      |                                      ~~~~~~^~~~~~
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp: In instantiation of 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, float, float>; unsigned int tplIndex = 0; T = MsgType; Ts = {MacAddr, float, float}; uint8_t = unsigned char; size_t = unsigned int]':
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:70:42:   required from 'std::optional<std::tuple<_Tps ...> > serializer::deserialize(const uint8_t*, size_t) [with Ts = {MsgType, MacAddr, float, float}; uint8_t = unsigned char; size_t = unsigned int]'
src/Messages.hpp:97:94:   required from here
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: error: no matching function for call to 'get<0>(std::tuple<MsgType, MacAddr, float, float>&)'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1, _Tp2>&)'
  223 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)'
  228 |     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&)'
  233 |     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(const std::pair<_Tp1, _Tp2>&&)'
  238 |     get(const std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_T1, _T2>&)'
  247 |     get(pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_T1, _T2>&)'
  252 |     get(const pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_T1, _T2>&&)'
  257 |     get(pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_T1, _T2>&&)'
  262 |     get(const pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_Up, _Tp>&)'
  267 |     get(pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_Up, _Tp>&)'
  272 |     get(const pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp: In instantiation of 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr>; unsigned int tplIndex = 0; T = MsgType; Ts = {MacAddr}; uint8_t = unsigned char; size_t = unsigned int]':
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:70:42:   required from 'std::optional<std::tuple<_Tps ...> > serializer::deserialize(const uint8_t*, size_t) [with Ts = {MsgType, MacAddr}; uint8_t = unsigned char; size_t = unsigned int]'
src/Messages.hpp:35:25:   required from here
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: error: no matching function for call to 'get<0>(std::tuple<MsgType, MacAddr>&)'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_Up, _Tp>&&)'
  277 |     get(pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_Up, _Tp>&&)'
  282 |     get(const pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp& std::get(std::array<_Tp, _Nm>&)'
  338 |     get(array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1, _Tp2>&)'
  223 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp&& std::get(std::array<_Tp, _Nm>&&)'
  347 |     get(array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp& std::get(const std::array<_Tp, _Nm>&)'
  355 |     get(const array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)'
  228 |     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&)'
  233 |     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp&& std::get(const std::array<_Tp, _Nm>&&)'
  364 |     get(const array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(const std::pair<_Tp1, _Tp2>&&)'
  238 |     get(const std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_T1, _T2>&)'
  247 |     get(pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_T1, _T2>&)'
  252 |     get(const pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_T1, _T2>&&)'
  257 |     get(pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_T1, _T2>&&)'
  262 |     get(const pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note:   template argument deduction/substitution failed:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp: In instantiation of 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, float, float>; unsigned int tplIndex = 1; T = MacAddr; Ts = {float, float}; uint8_t = unsigned char; size_t = unsigned int]':
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:57:42:   required from 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, float, float>; unsigned int tplIndex = 0; T = MsgType; Ts = {MacAddr, float, float}; uint8_t = unsigned char; size_t = unsigned int]'
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:70:42:   required from 'std::optional<std::tuple<_Tps ...> > serializer::deserialize(const uint8_t*, size_t) [with Ts = {MsgType, MacAddr, float, float}; uint8_t = unsigned char; size_t = unsigned int]'
src/Messages.hpp:97:94:   required from here
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: error: no matching function for call to 'get<1>(std::tuple<MsgType, MacAddr, float, float>&)'
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_Up, _Tp>&)'
  267 |     get(pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1, _Tp2>&)'
  223 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_Up, _Tp>&)'
  272 |     get(const pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_Up, _Tp>&&)'
  277 |     get(pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_Up, _Tp>&&)'
  282 |     get(const pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)'
  228 |     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp& std::get(std::array<_Tp, _Nm>&)'
  338 |     get(array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&)'
  233 |     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(const std::pair<_Tp1, _Tp2>&&)'
  238 |     get(const std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp&& std::get(std::array<_Tp, _Nm>&&)'
  347 |     get(array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_T1, _T2>&)'
  247 |     get(pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_T1, _T2>&)'
  252 |     get(const pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_T1, _T2>&&)'
  257 |     get(pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_T1, _T2>&&)'
  262 |     get(const pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_Up, _Tp>&)'
  267 |     get(pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp& std::get(const std::array<_Tp, _Nm>&)'
  355 |     get(const array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_Up, _Tp>&)'
  272 |     get(const pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_Up, _Tp>&&)'
  277 |     get(pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_Up, _Tp>&&)'
  282 |     get(const pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp& std::get(std::array<_Tp, _Nm>&)'
  338 |     get(array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp&& std::get(std::array<_Tp, _Nm>&&)'
  347 |     get(array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp& std::get(const std::array<_Tp, _Nm>&)'
  355 |     get(const array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp&& std::get(const std::array<_Tp, _Nm>&&)'
  364 |     get(const array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp&& std::get(const std::array<_Tp, _Nm>&&)'
  364 |     get(const array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp: In instantiation of 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr>; unsigned int tplIndex = 1; T = MacAddr; Ts = {}; uint8_t = unsigned char; size_t = unsigned int]':
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:57:42:   required from 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr>; unsigned int tplIndex = 0; T = MsgType; Ts = {MacAddr}; uint8_t = unsigned char; size_t = unsigned int]'
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:70:42:   required from 'std::optional<std::tuple<_Tps ...> > serializer::deserialize(const uint8_t*, size_t) [with Ts = {MsgType, MacAddr}; uint8_t = unsigned char; size_t = unsigned int]'
src/Messages.hpp:35:25:   required from here
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: error: no matching function for call to 'get<1>(std::tuple<MsgType, MacAddr>&)'
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp: In instantiation of 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, float, float>; unsigned int tplIndex = 2; T = float; Ts = {float}; uint8_t = unsigned char; size_t = unsigned int]':
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:57:42:   recursively required from 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, float, float>; unsigned int tplIndex = 1; T = MacAddr; Ts = {float, float}; uint8_t = unsigned char; size_t = unsigned int]'
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:57:42:   required from 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, float, float>; unsigned int tplIndex = 0; T = MsgType; Ts = {MacAddr, float, float}; uint8_t = unsigned char; size_t = unsigned int]'
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:70:42:   required from 'std::optional<std::tuple<_Tps ...> > serializer::deserialize(const uint8_t*, size_t) [with Ts = {MsgType, MacAddr, float, float}; uint8_t = unsigned char; size_t = unsigned int]'
src/Messages.hpp:97:94:   required from here
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: error: no matching function for call to 'get<2>(std::tuple<MsgType, MacAddr, float, float>&)'
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1, _Tp2>&)'
  223 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1, _Tp2>&)'
  223 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)'
  228 |     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)'
  228 |     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&)'
  233 |     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&)'
  233 |     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(const std::pair<_Tp1, _Tp2>&&)'
  238 |     get(const std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(const std::pair<_Tp1, _Tp2>&&)'
  238 |     get(const std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_T1, _T2>&)'
  247 |     get(pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_T1, _T2>&)'
  252 |     get(const pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_T1, _T2>&)'
  247 |     get(pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_T1, _T2>&&)'
  257 |     get(pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_T1, _T2>&)'
  252 |     get(const pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_T1, _T2>&&)'
  262 |     get(const pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_Up, _Tp>&)'
  267 |     get(pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_T1, _T2>&&)'
  257 |     get(pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_Up, _Tp>&)'
  272 |     get(const pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_Up, _Tp>&&)'
  277 |     get(pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_T1, _T2>&&)'
  262 |     get(const pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_Up, _Tp>&&)'
  282 |     get(const pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_Up, _Tp>&)'
  267 |     get(pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_Up, _Tp>&)'
  272 |     get(const pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp& std::get(std::array<_Tp, _Nm>&)'
  338 |     get(array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_Up, _Tp>&&)'
  277 |     get(pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_Up, _Tp>&&)'
  282 |     get(const pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp& std::get(std::array<_Tp, _Nm>&)'
  338 |     get(array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp&& std::get(std::array<_Tp, _Nm>&&)'
  347 |     get(array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp&& std::get(std::array<_Tp, _Nm>&&)'
  347 |     get(array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp& std::get(const std::array<_Tp, _Nm>&)'
  355 |     get(const array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp&& std::get(const std::array<_Tp, _Nm>&&)'
  364 |     get(const array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp& std::get(const std::array<_Tp, _Nm>&)'
  355 |     get(const array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp: In instantiation of 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, float, float>; unsigned int tplIndex = 3; T = float; Ts = {}; uint8_t = unsigned char; size_t = unsigned int]':
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:57:42:   recursively required from 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, float, float>; unsigned int tplIndex = 1; T = MacAddr; Ts = {float, float}; uint8_t = unsigned char; size_t = unsigned int]'
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:57:42:   required from 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, float, float>; unsigned int tplIndex = 0; T = MsgType; Ts = {MacAddr, float, float}; uint8_t = unsigned char; size_t = unsigned int]'
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:70:42:   required from 'std::optional<std::tuple<_Tps ...> > serializer::deserialize(const uint8_t*, size_t) [with Ts = {MsgType, MacAddr, float, float}; uint8_t = unsigned char; size_t = unsigned int]'
src/Messages.hpp:97:94:   required from here
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: error: no matching function for call to 'get<3>(std::tuple<MsgType, MacAddr, float, float>&)'
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp&& std::get(const std::array<_Tp, _Nm>&&)'
  364 |     get(const array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1, _Tp2>&)'
  223 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)'
  228 |     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&)'
  233 |     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(const std::pair<_Tp1, _Tp2>&&)'
  238 |     get(const std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_T1, _T2>&)'
  247 |     get(pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_T1, _T2>&)'
  252 |     get(const pair<_Tp, _Up>& __p) noexcept
      |     ^~~
In file included from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional: In instantiation of 'constexpr _Tp& std::optional<_Tp>::value() & [with _Tp = std::tuple<MsgType, MacAddr>]':
src/Messages.hpp:39:69:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:930:15: error: 'class std::optional<std::tuple<MsgType, MacAddr> >' has no member named '_M_is_engaged'
  930 |  return this->_M_is_engaged()
      |         ~~~~~~^~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_T1, _T2>&&)'
  257 |     get(pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_T1, _T2>&&)'
  262 |     get(const pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_Up, _Tp>&)'
  267 |     get(pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_Up, _Tp>&)'
  272 |     get(const pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_Up, _Tp>&&)'
  277 |     get(pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_Up, _Tp>&&)'
  282 |     get(const pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp& std::get(std::array<_Tp, _Nm>&)'
  338 |     get(array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:931:12: error: 'class std::optional<std::tuple<MsgType, MacAddr> >' has no member named '_M_get'
  931 |    ? this->_M_get()
      |      ~~~~~~^~~~~~
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp&& std::get(std::array<_Tp, _Nm>&&)'
  347 |     get(array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:932:44: error: 'class std::optional<std::tuple<MsgType, MacAddr> >' has no member named '_M_get'
  932 |    : (__throw_bad_optional_access(), this->_M_get());
      |                                      ~~~~~~^~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp& std::get(const std::array<_Tp, _Nm>&)'
  355 |     get(const array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp&& std::get(const std::array<_Tp, _Nm>&&)'
  364 |     get(const array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/EspNow.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from src/EspNow.hpp:4,
                 from src/EspNow.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional: In instantiation of 'constexpr _Tp& std::optional<_Tp>::value() & [with _Tp = std::tuple<MsgType, MacAddr, float, float>]':
src/Messages.hpp:101:92:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:930:15: error: 'class std::optional<std::tuple<MsgType, MacAddr, float, float> >' has no member named '_M_is_engaged'
  930 |  return this->_M_is_engaged()
      |         ~~~~~~^~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:931:12: error: 'class std::optional<std::tuple<MsgType, MacAddr, float, float> >' has no member named '_M_get'
  931 |    ? this->_M_get()
      |      ~~~~~~^~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:932:44: error: 'class std::optional<std::tuple<MsgType, MacAddr, float, float> >' has no member named '_M_get'
  932 |    : (__throw_bad_optional_access(), this->_M_get());
      |                                      ~~~~~~^~~~~~
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp: In instantiation of 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, unsigned char, unsigned char>; unsigned int tplIndex = 0; T = MsgType; Ts = {MacAddr, unsigned char, unsigned char}; uint8_t = unsigned char; size_t = unsigned int]':
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:70:42:   required from 'std::optional<std::tuple<_Tps ...> > serializer::deserialize(const uint8_t*, size_t) [with Ts = {MsgType, MacAddr, unsigned char, unsigned char}; uint8_t = unsigned char; size_t = unsigned int]'
src/Messages.hpp:66:79:   required from here
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: error: no matching function for call to 'get<0>(std::tuple<MsgType, MacAddr, unsigned char, unsigned char>&)'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1, _Tp2>&)'
  223 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)'
  228 |     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&)'
  233 |     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(const std::pair<_Tp1, _Tp2>&&)'
  238 |     get(const std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_T1, _T2>&)'
  247 |     get(pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_T1, _T2>&)'
  252 |     get(const pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_T1, _T2>&&)'
  257 |     get(pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_T1, _T2>&&)'
  262 |     get(const pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_Up, _Tp>&)'
  267 |     get(pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_Up, _Tp>&)'
  272 |     get(const pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_Up, _Tp>&&)'
  277 |     get(pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_Up, _Tp>&&)'
  282 |     get(const pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp& std::get(std::array<_Tp, _Nm>&)'
  338 |     get(array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp&& std::get(std::array<_Tp, _Nm>&&)'
  347 |     get(array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp& std::get(const std::array<_Tp, _Nm>&)'
  355 |     get(const array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp&& std::get(const std::array<_Tp, _Nm>&&)'
  364 |     get(const array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note:   template argument deduction/substitution failed:
*** [.pio/build/nodemcuv2/src/EspNow.cpp.o] Error 1
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp: In instantiation of 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, unsigned char, unsigned char>; unsigned int tplIndex = 1; T = MacAddr; Ts = {unsigned char, unsigned char}; uint8_t = unsigned char; size_t = unsigned int]':
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:57:42:   required from 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, unsigned char, unsigned char>; unsigned int tplIndex = 0; T = MsgType; Ts = {MacAddr, unsigned char, unsigned char}; uint8_t = unsigned char; size_t = unsigned int]'
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:70:42:   required from 'std::optional<std::tuple<_Tps ...> > serializer::deserialize(const uint8_t*, size_t) [with Ts = {MsgType, MacAddr, unsigned char, unsigned char}; uint8_t = unsigned char; size_t = unsigned int]'
src/Messages.hpp:66:79:   required from here
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: error: no matching function for call to 'get<1>(std::tuple<MsgType, MacAddr, unsigned char, unsigned char>&)'
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1, _Tp2>&)'
  223 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)'
  228 |     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&)'
  233 |     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(const std::pair<_Tp1, _Tp2>&&)'
  238 |     get(const std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_T1, _T2>&)'
  247 |     get(pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_T1, _T2>&)'
  252 |     get(const pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_T1, _T2>&&)'
  257 |     get(pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_T1, _T2>&&)'
  262 |     get(const pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_Up, _Tp>&)'
  267 |     get(pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_Up, _Tp>&)'
  272 |     get(const pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_Up, _Tp>&&)'
  277 |     get(pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_Up, _Tp>&&)'
  282 |     get(const pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp& std::get(std::array<_Tp, _Nm>&)'
  338 |     get(array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp&& std::get(std::array<_Tp, _Nm>&&)'
  347 |     get(array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp& std::get(const std::array<_Tp, _Nm>&)'
  355 |     get(const array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp&& std::get(const std::array<_Tp, _Nm>&&)'
  364 |     get(const array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp: In instantiation of 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, unsigned char, unsigned char>; unsigned int tplIndex = 2; T = unsigned char; Ts = {unsigned char}; uint8_t = unsigned char; size_t = unsigned int]':
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:57:42:   recursively required from 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, unsigned char, unsigned char>; unsigned int tplIndex = 1; T = MacAddr; Ts = {unsigned char, unsigned char}; uint8_t = unsigned char; size_t = unsigned int]'
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:57:42:   required from 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, unsigned char, unsigned char>; unsigned int tplIndex = 0; T = MsgType; Ts = {MacAddr, unsigned char, unsigned char}; uint8_t = unsigned char; size_t = unsigned int]'
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:70:42:   required from 'std::optional<std::tuple<_Tps ...> > serializer::deserialize(const uint8_t*, size_t) [with Ts = {MsgType, MacAddr, unsigned char, unsigned char}; uint8_t = unsigned char; size_t = unsigned int]'
src/Messages.hpp:66:79:   required from here
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: error: no matching function for call to 'get<2>(std::tuple<MsgType, MacAddr, unsigned char, unsigned char>&)'
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1, _Tp2>&)'
  223 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)'
  228 |     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&)'
  233 |     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(const std::pair<_Tp1, _Tp2>&&)'
  238 |     get(const std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_T1, _T2>&)'
  247 |     get(pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_T1, _T2>&)'
  252 |     get(const pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_T1, _T2>&&)'
  257 |     get(pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_T1, _T2>&&)'
  262 |     get(const pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_Up, _Tp>&)'
  267 |     get(pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_Up, _Tp>&)'
  272 |     get(const pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_Up, _Tp>&&)'
  277 |     get(pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_Up, _Tp>&&)'
  282 |     get(const pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp& std::get(std::array<_Tp, _Nm>&)'
  338 |     get(array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp&& std::get(std::array<_Tp, _Nm>&&)'
  347 |     get(array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp& std::get(const std::array<_Tp, _Nm>&)'
  355 |     get(const array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp&& std::get(const std::array<_Tp, _Nm>&&)'
  364 |     get(const array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp: In instantiation of 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, unsigned char, unsigned char>; unsigned int tplIndex = 3; T = unsigned char; Ts = {}; uint8_t = unsigned char; size_t = unsigned int]':
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:57:42:   recursively required from 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, unsigned char, unsigned char>; unsigned int tplIndex = 1; T = MacAddr; Ts = {unsigned char, unsigned char}; uint8_t = unsigned char; size_t = unsigned int]'
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:57:42:   required from 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, unsigned char, unsigned char>; unsigned int tplIndex = 0; T = MsgType; Ts = {MacAddr, unsigned char, unsigned char}; uint8_t = unsigned char; size_t = unsigned int]'
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:70:42:   required from 'std::optional<std::tuple<_Tps ...> > serializer::deserialize(const uint8_t*, size_t) [with Ts = {MsgType, MacAddr, unsigned char, unsigned char}; uint8_t = unsigned char; size_t = unsigned int]'
src/Messages.hpp:66:79:   required from here
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: error: no matching function for call to 'get<3>(std::tuple<MsgType, MacAddr, unsigned char, unsigned char>&)'
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1, _Tp2>&)'
  223 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)'
  228 |     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&)'
  233 |     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(const std::pair<_Tp1, _Tp2>&&)'
  238 |     get(const std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_T1, _T2>&)'
  247 |     get(pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_T1, _T2>&)'
  252 |     get(const pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_T1, _T2>&&)'
  257 |     get(pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_T1, _T2>&&)'
  262 |     get(const pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_Up, _Tp>&)'
  267 |     get(pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_Up, _Tp>&)'
  272 |     get(const pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_Up, _Tp>&&)'
  277 |     get(pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_Up, _Tp>&&)'
  282 |     get(const pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp& std::get(std::array<_Tp, _Nm>&)'
  338 |     get(array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp&& std::get(std::array<_Tp, _Nm>&&)'
  347 |     get(array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp& std::get(const std::array<_Tp, _Nm>&)'
  355 |     get(const array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp&& std::get(const std::array<_Tp, _Nm>&&)'
  364 |     get(const array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, unsigned char, unsigned char>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional: In instantiation of 'constexpr _Tp& std::optional<_Tp>::value() & [with _Tp = std::tuple<MsgType, MacAddr, unsigned char, unsigned char>]':
src/Messages.hpp:70:89:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:930:15: error: 'class std::optional<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >' has no member named '_M_is_engaged'
  930 |  return this->_M_is_engaged()
      |         ~~~~~~^~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:931:12: error: 'class std::optional<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >' has no member named '_M_get'
  931 |    ? this->_M_get()
      |      ~~~~~~^~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:932:44: error: 'class std::optional<std::tuple<MsgType, MacAddr, unsigned char, unsigned char> >' has no member named '_M_get'
  932 |    : (__throw_bad_optional_access(), this->_M_get());
      |                                      ~~~~~~^~~~~~
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp: In instantiation of 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, float, float>; unsigned int tplIndex = 0; T = MsgType; Ts = {MacAddr, float, float}; uint8_t = unsigned char; size_t = unsigned int]':
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:70:42:   required from 'std::optional<std::tuple<_Tps ...> > serializer::deserialize(const uint8_t*, size_t) [with Ts = {MsgType, MacAddr, float, float}; uint8_t = unsigned char; size_t = unsigned int]'
src/Messages.hpp:97:94:   required from here
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: error: no matching function for call to 'get<0>(std::tuple<MsgType, MacAddr, float, float>&)'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1, _Tp2>&)'
  223 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)'
  228 |     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&)'
  233 |     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(const std::pair<_Tp1, _Tp2>&&)'
  238 |     get(const std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_T1, _T2>&)'
  247 |     get(pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_T1, _T2>&)'
  252 |     get(const pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_T1, _T2>&&)'
  257 |     get(pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_T1, _T2>&&)'
  262 |     get(const pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_Up, _Tp>&)'
  267 |     get(pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_Up, _Tp>&)'
  272 |     get(const pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_Up, _Tp>&&)'
  277 |     get(pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_Up, _Tp>&&)'
  282 |     get(const pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp& std::get(std::array<_Tp, _Nm>&)'
  338 |     get(array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp&& std::get(std::array<_Tp, _Nm>&&)'
  347 |     get(array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp& std::get(const std::array<_Tp, _Nm>&)'
  355 |     get(const array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp&& std::get(const std::array<_Tp, _Nm>&&)'
  364 |     get(const array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp: In instantiation of 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, float, float>; unsigned int tplIndex = 1; T = MacAddr; Ts = {float, float}; uint8_t = unsigned char; size_t = unsigned int]':
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:57:42:   required from 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, float, float>; unsigned int tplIndex = 0; T = MsgType; Ts = {MacAddr, float, float}; uint8_t = unsigned char; size_t = unsigned int]'
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:70:42:   required from 'std::optional<std::tuple<_Tps ...> > serializer::deserialize(const uint8_t*, size_t) [with Ts = {MsgType, MacAddr, float, float}; uint8_t = unsigned char; size_t = unsigned int]'
src/Messages.hpp:97:94:   required from here
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: error: no matching function for call to 'get<1>(std::tuple<MsgType, MacAddr, float, float>&)'
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1, _Tp2>&)'
  223 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)'
  228 |     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&)'
  233 |     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(const std::pair<_Tp1, _Tp2>&&)'
  238 |     get(const std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_T1, _T2>&)'
  247 |     get(pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_T1, _T2>&)'
  252 |     get(const pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_T1, _T2>&&)'
  257 |     get(pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_T1, _T2>&&)'
  262 |     get(const pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_Up, _Tp>&)'
  267 |     get(pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_Up, _Tp>&)'
  272 |     get(const pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_Up, _Tp>&&)'
  277 |     get(pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_Up, _Tp>&&)'
  282 |     get(const pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp& std::get(std::array<_Tp, _Nm>&)'
  338 |     get(array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp&& std::get(std::array<_Tp, _Nm>&&)'
  347 |     get(array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp& std::get(const std::array<_Tp, _Nm>&)'
  355 |     get(const array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp&& std::get(const std::array<_Tp, _Nm>&&)'
  364 |     get(const array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp: In instantiation of 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, float, float>; unsigned int tplIndex = 2; T = float; Ts = {float}; uint8_t = unsigned char; size_t = unsigned int]':
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:57:42:   recursively required from 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, float, float>; unsigned int tplIndex = 1; T = MacAddr; Ts = {float, float}; uint8_t = unsigned char; size_t = unsigned int]'
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:57:42:   required from 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, float, float>; unsigned int tplIndex = 0; T = MsgType; Ts = {MacAddr, float, float}; uint8_t = unsigned char; size_t = unsigned int]'
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:70:42:   required from 'std::optional<std::tuple<_Tps ...> > serializer::deserialize(const uint8_t*, size_t) [with Ts = {MsgType, MacAddr, float, float}; uint8_t = unsigned char; size_t = unsigned int]'
src/Messages.hpp:97:94:   required from here
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: error: no matching function for call to 'get<2>(std::tuple<MsgType, MacAddr, float, float>&)'
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1, _Tp2>&)'
  223 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)'
  228 |     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&)'
  233 |     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(const std::pair<_Tp1, _Tp2>&&)'
  238 |     get(const std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_T1, _T2>&)'
  247 |     get(pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_T1, _T2>&)'
  252 |     get(const pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_T1, _T2>&&)'
  257 |     get(pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_T1, _T2>&&)'
  262 |     get(const pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_Up, _Tp>&)'
  267 |     get(pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_Up, _Tp>&)'
  272 |     get(const pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_Up, _Tp>&&)'
  277 |     get(pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_Up, _Tp>&&)'
  282 |     get(const pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp& std::get(std::array<_Tp, _Nm>&)'
  338 |     get(array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp&& std::get(std::array<_Tp, _Nm>&&)'
  347 |     get(array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp& std::get(const std::array<_Tp, _Nm>&)'
  355 |     get(const array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp&& std::get(const std::array<_Tp, _Nm>&&)'
  364 |     get(const array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp: In instantiation of 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, float, float>; unsigned int tplIndex = 3; T = float; Ts = {}; uint8_t = unsigned char; size_t = unsigned int]':
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:57:42:   recursively required from 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, float, float>; unsigned int tplIndex = 1; T = MacAddr; Ts = {float, float}; uint8_t = unsigned char; size_t = unsigned int]'
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:57:42:   required from 'auto serializer::readValue(Tuple&, const uint8_t*, size_t) [with Tuple = std::tuple<MsgType, MacAddr, float, float>; unsigned int tplIndex = 0; T = MsgType; Ts = {MacAddr, float, float}; uint8_t = unsigned char; size_t = unsigned int]'
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:70:42:   required from 'std::optional<std::tuple<_Tps ...> > serializer::deserialize(const uint8_t*, size_t) [with Ts = {MsgType, MacAddr, float, float}; uint8_t = unsigned char; size_t = unsigned int]'
src/Messages.hpp:97:94:   required from here
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: error: no matching function for call to 'get<3>(std::tuple<MsgType, MacAddr, float, float>&)'
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1, _Tp2>&)'
  223 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:223:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)'
  228 |     get(std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:228:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(const std::pair<_Tp1, _Tp2>&)'
  233 |     get(const std::pair<_Tp1, _Tp2>& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:233:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note: candidate: 'template<unsigned int _Int, class _Tp1, class _Tp2> constexpr const typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&& std::get(const std::pair<_Tp1, _Tp2>&&)'
  238 |     get(const std::pair<_Tp1, _Tp2>&& __in) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:238:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::pair<_Tp1, _Tp2>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:36,
                 from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_T1, _T2>&)'
  247 |     get(pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:247:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_T1, _T2>&)'
  252 |     get(const pair<_Tp, _Up>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:252:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_T1, _T2>&&)'
  257 |     get(pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:257:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_T1, _T2>&&)'
  262 |     get(const pair<_Tp, _Up>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:262:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp& std::get(std::pair<_Up, _Tp>&)'
  267 |     get(pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:267:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp& std::get(const std::pair<_Up, _Tp>&)'
  272 |     get(const pair<_Up, _Tp>& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:272:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note: candidate: 'template<class _Tp, class _Up> constexpr _Tp&& std::get(std::pair<_Up, _Tp>&&)'
  277 |     get(pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:277:5: note:   template argument deduction/substitution failed:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note: candidate: 'template<class _Tp, class _Up> constexpr const _Tp&& std::get(const std::pair<_Up, _Tp>&&)'
  282 |     get(const pair<_Up, _Tp>&& __p) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/utility:282:5: note:   template argument deduction/substitution failed:
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp& std::get(std::array<_Tp, _Nm>&)'
  338 |     get(array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:338:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr _Tp&& std::get(std::array<_Tp, _Nm>&&)'
  347 |     get(array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:347:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp& std::get(const std::array<_Tp, _Nm>&)'
  355 |     get(const array<_Tp, _Nm>& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:355:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from /home/sebastian/Programming/ThNetwork/ThCommon/src/MacAddr.hpp:3,
                 from src/EspNow.hpp:6,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note: candidate: 'template<unsigned int _Int, class _Tp, unsigned int _Nm> constexpr const _Tp&& std::get(const std::array<_Tp, _Nm>&&)'
  364 |     get(const array<_Tp, _Nm>&& __arr) noexcept
      |     ^~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/array:364:5: note:   template argument deduction/substitution failed:
In file included from src/Messages.hpp:6,
                 from src/EspNow.hpp:7,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/Programming/ThNetwork/ThCommon/src/serializer.hpp:56:31: note:   'std::tuple<MsgType, MacAddr, float, float>' is not derived from 'const std::array<_Tp, _Nm>'
   56 |     memcpy(&std::get<tplIndex>(values), srcPtr, sizeof(T));
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~
In file included from src/EspNow.hpp:4,
                 from src/App.hpp:3,
                 from src/App.cpp:1:
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional: In instantiation of 'constexpr _Tp& std::optional<_Tp>::value() & [with _Tp = std::tuple<MsgType, MacAddr, float, float>]':
src/Messages.hpp:101:92:   required from here
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:930:15: error: 'class std::optional<std::tuple<MsgType, MacAddr, float, float> >' has no member named '_M_is_engaged'
  930 |  return this->_M_is_engaged()
      |         ~~~~~~^~~~~~~~~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:931:12: error: 'class std::optional<std::tuple<MsgType, MacAddr, float, float> >' has no member named '_M_get'
  931 |    ? this->_M_get()
      |      ~~~~~~^~~~~~
/home/sebastian/.platformio/packages/toolchain-xtensa/xtensa-lx106-elf/include/c++/10.3.0/optional:932:44: error: 'class std::optional<std::tuple<MsgType, MacAddr, float, float> >' has no member named '_M_get'
  932 |    : (__throw_bad_optional_access(), this->_M_get());
      |                                      ~~~~~~^~~~~~
*** [.pio/build/nodemcuv2/src/App.cpp.o] Error 1
===================================================================== [FAILED] Took 2.20 seconds =====================================================================
